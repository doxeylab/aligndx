version: "3.7"
services:
  backend: 
    build:
      context: backend
      dockerfile: docker/api/Dockerfile
    command: sh -c " sh ./bin/wait-for/wait-for.sh kafka:29092 --timeout=20 && uvicorn app.main:app --workers 4 --reload --host 0.0.0.0 --port 8080"
    tty: true
    depends_on:
      - postgres
      - kafka
    ports:
      - "8080:8080"
    volumes:
      # these are all bind mounts, not volumes
      - ./backend/app:/app/app
      - ./backend/results:/app/results
      - ./backend/uploads:/app/uploads
      - ./backend/indexes:/app/indexes
      - ./backend/metadata:/app/metadata
    environment:
      # PYTHONPATH: .
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
      ORIGINS: ${ORIGINS}
      SECRET_KEY: ${SECRET_KEY}
      FAUST_BROKER_URL: "kafka://kafka:29092"

  frontend: 
    build:
      context: frontend
      dockerfile: Dockerfile
    stdin_open: true 
    ports:
      - "80:3000"
    volumes:
      - ./frontend:/app/
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_BACKEND_ACCESS_URL=${REACT_APP_BACKEND_ACCESS_URL} 

  postgres:  
    image: postgres:12
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  # pgadmin:  
  #   tty: true
  #   image: dpage/pgadmin4
  #   restart: unless-stopped
  #   depends_on:
  #     - postgres
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
  #     - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
  #     - PGADMIN_LISTEN_PORT=80
  #   ports:
  #     - "8001:80"
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin 
  
  salmon: 
    build:
      context: salmon
      dockerfile: Dockerfile
    command: uvicorn app.main:app --workers 4 --host 0.0.0.0 --port 80
    tty: true
    ports:
      - "8002:80"
    volumes: 
      - ./salmon/app:/app/app
      - ./backend/results:/app/results
      - ./backend/uploads:/app/uploads
      - ./backend/indexes:/app/indexes
      - ./backend/metadata:/app/metadata

  worker:
    build:
      context: backend
      dockerfile: docker/worker/Dockerfile 
    command: sh -c "sh ./bin/wait-for/wait-for.sh kafka:29092 --timeout=20 && python -m app.worker worker -l info"
    tty: true 
    environment: 
      FAUST_BROKER_URL: "kafka://kafka:29092"
    depends_on:
      - kafka

  kafka:
    image: confluentinc/cp-kafka:6.0.0
    ports:
      - "29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
      - kafka-secrets:/etc/kafka/secrets
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    ports:
      - "32181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
      - zookeeper-secrets:/etc/zookeeper/secrets

volumes:
  db-data:
  pgadmin-data: 
  kafka-data:
  kafka-secrets:
  zookeeper-data:
  zookeeper-log:
  zookeeper-secrets:
