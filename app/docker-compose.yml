version: "3.7"
services:
  backend:
    platform: linux/amd64
    build:
      context: backend
      dockerfile: Dockerfile
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8080
    tty: true
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      # these are all bind mounts, not volumes
      - ./backend/app:/app/app
      - ./backend/results:/app/results
      - ./backend/uploads:/app/uploads
      - ./backend/indexes:/app/indexes
      - ./backend/metadata:/app/metadata
    environment:
      # PYTHONPATH: .
      DATABASE_URL: "postgresql://aligndx:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"

  frontend:
    platform: linux/amd64
    build:
      context: frontend
      dockerfile: Dockerfile
    stdin_open: true
    ports:
      - "80:3000"
    volumes:
      - ./frontend:/app
      # - ./frontend/node_modules:/app/node_modules
    environment:
      - NODE_ENV=development

  postgres:
    platform: linux/amd64
    image: postgres:12
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  pgadmin:
    platform: linux/amd64
    image: dpage/pgadmin4
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=80
    ports:
      - "8001:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    links:
      - postgres:pgsql-server

volumes:
  db-data:
  pgadmin-data:
