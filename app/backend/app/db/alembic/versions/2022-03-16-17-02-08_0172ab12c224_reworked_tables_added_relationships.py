"""reworked tables + added relationships

Revision ID: 0172ab12c224
Revises: 33323149a317
Create Date: 2022-03-16 17:02:08.428909

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0172ab12c224'
down_revision = '33323149a317'
branch_labels = None
depends_on = None


def upgrade(): 

    op.drop_table('invoices')
    op.drop_table('deletion_logs')
    op.drop_table('upload_logs')
    op.drop_table('subscriptions')
    op.drop_table('submissions')
    op.drop_table('customers')
    op.drop_table('users')

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(length=250), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customers',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('admin_user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('creation_time', sa.DateTime(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['admin_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('submissions',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('submission_type', sa.String(), nullable=False),
    sa.Column('panel', sa.String(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('finished_date', sa.DateTime(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscriptions',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('customer_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('creation_time', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('plan_description', sa.String(length=50), nullable=False),
    sa.Column('initial_start_date', sa.DateTime(), nullable=True),
    sa.Column('is_cancelled', sa.Boolean(), nullable=True),
    sa.Column('cancel_date', sa.DateTime(), nullable=True),
    sa.Column('current_period_start', sa.DateTime(), nullable=True),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=50), nullable=False),
    sa.Column('stripe_latest_invoice_id', sa.String(length=50), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=50), nullable=True),
    sa.Column('stripe_price_id', sa.String(length=50), nullable=False),
    sa.Column('stripe_default_payment_method_id', sa.String(length=50), nullable=True),
    sa.Column('payment_card_type', sa.String(length=50), nullable=True),
    sa.Column('card_last4', sa.String(length=50), nullable=True),
    sa.Column('card_expiry', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('upload_logs',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('submission_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('start_kilobytes', sa.Integer(), nullable=False),
    sa.Column('size_kilobytes', sa.Integer(), nullable=False),
    sa.Column('creation_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('deletion_logs',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('upload_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('deletion_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['upload_id'], ['upload_logs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoices',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('subscription_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('customer_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('creation_time', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('amount_due', sa.Integer(), nullable=False),
    sa.Column('amount_paid', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=50), nullable=False),
    sa.Column('payment_card_type', sa.String(length=50), nullable=True),
    sa.Column('payment_card_last4', sa.String(length=50), nullable=True),
    sa.Column('payment_card_expiry', sa.String(length=50), nullable=True),
    sa.Column('invoice_date', sa.DateTime(), nullable=False),
    sa.Column('billing_period_start', sa.DateTime(), nullable=False),
    sa.Column('billing_period_end', sa.DateTime(), nullable=False),
    sa.Column('stripe_invoice_id', sa.String(length=50), nullable=False),
    sa.Column('stripe_payment_intent_id', sa.String(length=50), nullable=True),
    sa.Column('stripe_payment_method_id', sa.String(length=50), nullable=True),
    sa.Column('stripe_invoice_url', sa.String(length=200), nullable=True),
    sa.Column('stripe_invoice_number', sa.String(length=50), nullable=True),
    sa.Column('stripe_payment_receipt_url', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # note that this downgrade will not rollback to the previous iteration of migrations, rather, it will lead to an empy db table!
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('invoices')
    op.drop_table('deletion_logs')
    op.drop_table('upload_logs')
    op.drop_table('subscriptions')
    op.drop_table('submissions')
    op.drop_table('customers')
    op.drop_table('users')

    # ### end Alembic commands ###
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('hashed_password', sa.String(length=250), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('submissions',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('panel', sa.String(length=50), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('sample_name', sa.String(length=50), nullable=True),
    sa.Column('finished_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    op.create_table('upload_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', postgresql.UUID(), nullable=False),
    sa.Column('start_kilobytes', sa.Integer(), nullable=False),
    sa.Column('size_kilobytes', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('deletion_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('upload_id', sa.Integer(), nullable=False),
    sa.Column('deletion_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['upload_id'], ['upload_logs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('stripe_customer_id', sa.String(length=50), nullable=True),
    sa.Column('creation_time', sa.DateTime(), nullable=False),
    sa.Column('admin_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['admin_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('plan_description', sa.String(length=50), nullable=False),
    sa.Column('initial_start_date', sa.DateTime(), nullable=True),
    sa.Column('is_cancelled', sa.Boolean(), nullable=True),
    sa.Column('cancel_date', sa.DateTime(), nullable=True),
    sa.Column('current_period_start', sa.DateTime(), nullable=True),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(length=50), nullable=False),
    sa.Column('stripe_latest_invoice_id', sa.String(length=50), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=50), nullable=True),
    sa.Column('stripe_price_id', sa.String(length=50), nullable=False),
    sa.Column('stripe_default_payment_method_id', sa.String(length=50), nullable=True),
    sa.Column('payment_card_type', sa.String(length=50), nullable=True),
    sa.Column('card_last4', sa.String(length=50), nullable=True),
    sa.Column('card_expiry', sa.String(length=50), nullable=True),
    sa.Column('creation_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('amount_due', sa.Integer(), nullable=False),
    sa.Column('amount_paid', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=50), nullable=False),
    sa.Column('payment_card_type', sa.String(length=50), nullable=True),
    sa.Column('payment_card_last4', sa.String(length=50), nullable=True),
    sa.Column('payment_card_expiry', sa.String(length=50), nullable=True),
    sa.Column('invoice_date', sa.DateTime(), nullable=False),
    sa.Column('billing_period_start', sa.DateTime(), nullable=False),
    sa.Column('billing_period_end', sa.DateTime(), nullable=False),
    sa.Column('stripe_invoice_id', sa.String(length=50), nullable=False),
    sa.Column('stripe_payment_intent_id', sa.String(length=50), nullable=True),
    sa.Column('stripe_payment_method_id', sa.String(length=50), nullable=True),
    sa.Column('stripe_invoice_url', sa.String(length=200), nullable=True),
    sa.Column('stripe_invoice_number', sa.String(length=50), nullable=True),
    sa.Column('stripe_payment_receipt_url', sa.String(length=200), nullable=True),
    sa.Column('subscription_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('creation_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )